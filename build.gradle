buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.ratpack:ratpack-gradle:2.0.0-rc-1"
    }
}

plugins {
    id "io.ratpack.ratpack-java" version "2.0.0-rc-1"
    id "idea"
}

repositories {
    mavenCentral()
}

dependencies {
    runtimeOnly "org.slf4j:slf4j-simple:1.7.36"

    compileOnly "org.projectlombok:lombok:1.18.24"
    annotationProcessor "org.projectlombok:lombok:1.18.24"

    implementation "commons-io:commons-io:2.11.0"
    implementation "org.apache.commons:commons-lang3:3.12.0"

    testImplementation 'org.mockito:mockito-junit-jupiter:4.8.0'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

mainClassName = 'com.timezone.fetcher.Main'

sourceSets {
    itest {
        java {
            compileClasspath += sourceSets.main.output + main.output + test.output + sourceSets.test.compileClasspath
            runtimeClasspath += sourceSets.main.output + main.output + test.output + sourceSets.test.runtimeClasspath
            srcDir file('src/itest/java')
        }
        resources.srcDir file('src/itest/resources')
    }
}

configurations {
    itestImplementation.extendsFrom implementation
    itestRuntimeOnly.extendsFrom runtimeOnly
}

def integrationTestTask = tasks.register('itest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'
    useJUnitPlatform()

    testClassesDirs = sourceSets.itest.output.classesDirs
    classpath = configurations[sourceSets.itest.runtimeClasspathConfigurationName] + sourceSets.itest.output + sourceSets.test.runtimeClasspath
}

tasks.named('test') {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
